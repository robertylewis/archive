[
    {
        "content": "<p><code>group_theory.coset</code> and its descendants still <code>import deprecated.subgroup</code>.</p>",
        "id": 203243527,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197408
    },
    {
        "content": "<p>Does anyone plan to fix this?</p>",
        "id": 203243540,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197420
    },
    {
        "content": "<p>I just went through <code>group_theory.coset</code> and managed to convert everything over except for one broken proof I'm still thinking about</p>",
        "id": 203243565,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197439
    },
    {
        "content": "<p>but there are then many more files which break</p>",
        "id": 203243575,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197446
    },
    {
        "content": "<p>I'm also losing enthusiasm...</p>",
        "id": 203243675,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197509
    },
    {
        "content": "<p>unfortunately this refactor is also getting in the way of other things I want to do (e.g. proving that <code>Ab</code> is an abelian category, so we can start doing homological algebra), where I really don't want to layer more work on top of deprecated stuff.</p>",
        "id": 203243733,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197546
    },
    {
        "content": "<p>So... any enthusiasm for helping with / doing this refactor? :-)</p>",
        "id": 203243753,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197562
    },
    {
        "content": "<p>I would, if it weren't for the fact that I have three maths papers that I should be working on, a workshop coming up next week, and two exams that I need to design.</p>",
        "id": 203243854,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594197610
    },
    {
        "content": "<p>Sounds good. :-) We can get there eventually!</p>",
        "id": 203243885,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197639
    },
    {
        "content": "<p>I've pushed a branch <code>quotient_group_refactor</code>, which anyone should feel invited to hack on. :-)</p>",
        "id": 203243900,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594197658
    },
    {
        "content": "<p>In fact, I made it into a <code>WIP</code> PR, as <a href=\"https://github.com/leanprover-community/mathlib/issues/3321\">#3321</a></p>",
        "id": 203244332,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594198010
    },
    {
        "content": "<p>I can help. I also want to see the back of this.</p>",
        "id": 203247137,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594200386
    },
    {
        "content": "<p>Ok I've finished the day job and I'm starting</p>",
        "id": 203292103,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594226748
    },
    {
        "content": "<p>The broken proof seems to be a wacky bug -- defining <code>subgroup.subtype</code> clobbers subtype notation in the namespace: <a href=\"#narrow/stream/113488-general/topic/subgroup.2Esubtype.20clobbers.20subtype.20notation.20in.20namespace/near/203296154\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/subgroup.2Esubtype.20clobbers.20subtype.20notation.20in.20namespace/near/203296154</a></p>",
        "id": 203296869,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594229229
    },
    {
        "content": "<p>I think that quotient groups should use <code>con</code></p>",
        "id": 203324303,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594242947
    },
    {
        "content": "<p>This way we can prove several general facts about <code>con</code>s and use the same type for group and mood quotients</p>",
        "id": 203324584,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594243042
    },
    {
        "content": "<p>E.g., we actually don't need the group structure for abelianization</p>",
        "id": 203324739,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594243109
    },
    {
        "content": "<p>Can you explain more? I don't know what <code>con</code> is and I've been struggling through quotient groups this evening. Still not quite done.</p>",
        "id": 203331834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594247584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I got up to the first isomorphism theorem in quotient_group but didn't finish it. There are many many files which import this stuff. Maybe it's possible to add the deprecated import back once you've got what you need for Ab?</p>",
        "id": 203334002,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594249110
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/con/src\">src#con</a> is an equivalence relation on a monoid such that <code>x ≈ y</code> and <code>x' ≈ y'</code> implies <code>x * x' ≈y * y'</code>.</p>",
        "id": 203352235,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594272986
    },
    {
        "content": "<p>In other words, it is a setoid <code>s</code> such that <code>(*)</code> lifts to <code>s.quotient</code>.</p>",
        "id": 203352245,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594273046
    },
    {
        "content": "<p>We have a <code>complete_lattice</code> structure on <code>con</code>s, so we can define <code>ab_con (M : Type*) [monoid M] := Inf {r : con M | ∀ a b, r (a * b) (b * a)}</code> and <code>abelianization M := (ab_con M).quotient</code>.</p>",
        "id": 203352308,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594273131
    },
    {
        "content": "<p>This way we get the universal property for free.</p>",
        "id": 203352314,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594273145
    },
    {
        "content": "<p>For <code>s : submonoid M</code> we can define <code>s.con := Inf {r : con M | ∀ a ∈ s, r a 1}</code>, and we'll know for sure that <code>f : M →* N</code> such that <code>∀ x ∈ s, f x = 1</code> lifts to <code>f : s.con.quotient →* N</code>.</p>",
        "id": 203352409,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594273310
    },
    {
        "content": "<p>For a normal subgroup we'll have <code>s.con x y = y⁻¹ * x ∈ s</code>.</p>",
        "id": 203352462,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594273350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/refactor.20of.20group_theory.2Ecoset.20and.20friends/near/203352245\">said</a>:</p>\n<blockquote>\n<p>In other words, it is a setoid <code>s</code> such that <code>(*)</code> lifts to <code>s.quotient</code>.</p>\n</blockquote>\n<p>Argh, please don't use lift like that, it takes way too long to parse :)</p>",
        "id": 203357046,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1594279368
    },
    {
        "content": "<p>I made a bit more progress on this. There's just one more sorry in <code>quotient_group</code>. (There was a weird problem with an <code>include</code> statement that went on for too long.) I also fixed a few other files.</p>",
        "id": 203501078,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594384553
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 204315584,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595102699
    },
    {
        "content": "<p>I made some further progress. <code>group_theory.abelianization</code> and <code>group_theory.presented_group</code> are now good.</p>",
        "id": 204337676,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595144603
    },
    {
        "content": "<p><code>free_abelian_group</code> has two broken proofs</p>",
        "id": 204337679,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595144611
    },
    {
        "content": "<p>What is the goal here? For abelianisation I noticed that it was importing the deprecated subgroups but we broke it anyway because of the change in syntax for quotients. On the other hand presumably some broken files can just be fixed by adding the deprecated imports back</p>",
        "id": 204340920,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595150855
    }
]